
# Dakota Input File: beam_sampling.in
# Usage:
#   dakota -i beam_surr.in -o beam_surr.out > beam_surr.stdout

environment
  method_pointer = 'EvalSurr'
  tabular_data
    tabular_data_file = 'beam_surr_eval.dat'


method
  id_method = 'EvalSurr'
  model_pointer = 'SurrogateModel'
  sampling
    seed = 5
    sample_type lhs
    samples = 100 

method
  id_method = 'DesignMethod'
  model_pointer = 'SimulationModel'
  sampling
    seed = 50
    sample_type lhs
    samples = 50

model
  id_model = 'SimulationModel'
  single
  interface_pointer = 'SimulationInterface'

model
  id_model = 'SurrogateModel'
  surrogate global
    dace_method_pointer = 'DesignMethod'
    gaussian_process surfpack
  export_model
    filename_prefix = 'beam_gp_model'
    formats
      text_archive


variables
  continuous_design = 6
    descriptors       'h'     'tw'   'blf'   'tlf'   'buf'   'tuf'
    initial_point     140.0   2.5    60.0    5.0     60.0    5.0
    lower_bounds      30.0    1.5    6.0     1.5     6.0     1.5
    upper_bounds      300.0   6.0    100.0   12.0    100.0   12.0

  continuous_state = 3
    descriptors      'L'      'Fup'     'Fdown'
    initial_state     1500.0   6000.0    -10000.0
    
  discrete_state_set string = 1
    descriptors   'matname'
    elements      'AL2198' 'AL7010' 'TI64'
    initial_state 'AL7010'
    

interface
  id_interface = 'SimulationInterface'
	fork							
  analysis_drivers = 'python.exe dakotabeam.py'
	parameters_file = 'params.in'
	results_file = 'results.out'
#	file_tag


responses
  objective_functions = 11
  # descriptors = 'mass' 'cost' 'rf_t_uf' 'rf_t_lf' 'rf_c_uf' 'rf_c_lf' 'rf_lb_uf' 'rf_lb_lf' 'rf_s_web' 'rf_wb' 'rf_lat' 
  descriptors   'mass' 'cost' 'g_t_uf' 'g_t_lf' 'g_c_uf' 'g_c_lf' 'g_lb_uf' 'g_lb_lf' 'g_s_web' 'g_wb' 'g_lat' 
  no_gradients
  no_hessians

